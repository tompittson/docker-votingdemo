version: "3"
services:

  db-master:
    image: localhost:5050/votingdemo-db:master-slave
    volumes:
      - postgres-master:/var/lib/postgresql/data:rw
    networks:
      - backend
    deploy:
      placement:
        constraints:
          - node.labels.postgres==master
      replicas: 1
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres

  db-slave:
    image: localhost:5050/votingdemo-db:master-slave
    volumes:
      - postgres-master:/var/lib/postgresql/data:rw
    networks:
      - backend
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.postgres==slave
      replicas: 1
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      REPLICATE_FROM: db-master

  redis:
    image: redis:alpine
    networks:
      - frontend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  vote:
    image: localhost:5050/votingdemo-vote
    ports:
      - 5000:80
    networks:
      - frontend
    depends_on:
      - redis
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  result:
    image: localhost:5050/votingdemo-result
    ports:
      - 5001:80
    networks:
      - backend
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  worker:
    image: localhost:5050/votingdemo-worker
    networks:
      - frontend
      - backend
    deploy:
      mode: replicated
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      placement:
        constraints: [node.role == manager]

networks:
  frontend:
  backend:

volumes:
  postgres-master: {}
  postgres-slave: {}
